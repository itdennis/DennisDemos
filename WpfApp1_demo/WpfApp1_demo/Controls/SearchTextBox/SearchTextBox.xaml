<!--/********************************************************************
 *
 *  PROPRIETARY and CONFIDENTIAL
 *
 *  This file is licensed from, and is a trade secret of:
 *
 *                   AvePoint, Inc.
 *                   Harborside Financial Center
 *                   9th Fl.   Plaza Ten
 *                   Jersey City, NJ 07311
 *                   United States of America
 *                   Telephone: +1-800-661-6588
 *                   WWW: www.avepoint.com
 *
 *  Refer to your License Agreement for restrictions on use,
 *  duplication, or disclosure.
 *
 *  RESTRICTED RIGHTS LEGEND
 *
 *  Use, duplication, or disclosure by the Government is
 *  subject to restrictions as set forth in subdivision
 *  (c)(1)(ii) of the Rights in Technical Data and Computer
 *  Software clause at DFARS 252.227-7013 (Oct. 1988) and
 *  FAR 52.227-19 (C) (June 1987).
 *
 *  Copyright © 2001-2014 AvePoint® Inc. All Rights Reserved. 
 *
 *  Unpublished - All rights reserved under the copyright laws of the United States.
 *  $Revision:  $
 *  $Author:  $        
 *  $Date:  $
 */-->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:AvePoint.Migrator.Common.Controls"
                    xmlns:vsm="clr-namespace:System.Windows">
    <Color x:Key="TextBkgSelection">#FF309AFF</Color>
    <Color x:Key="TextboxOver1">#FF5296BD</Color>
    <Color x:Key="TextboxOver2">#FFC2E4F6</Color>
    <Color x:Key="TextboxPress1">#FF3B79AC</Color>
    <Color x:Key="TextboxPress2">#FF3388FF</Color>
    <SolidColorBrush x:Key="TextBackgroundSelection" Color="{StaticResource TextBkgSelection}"/>
    <SolidColorBrush x:Key="TextBoxPressBrush" Color="{StaticResource TextboxPress1}"/>

    <!-- for TextBox and ComboBox in "over" state -->
    <SolidColorBrush x:Key="TextBoxOver" Color="#FF4488CC"/>
    <!-- for TextBox in focus state and ComboBox in pressed state -->
    <SolidColorBrush x:Key="TextBoxFocus" Color="#FF98DDFB"/>
    <!-- for TextBox in normal state and ComboBox in normal state -->
    <SolidColorBrush x:Key="TextBoxNorm" Color="#FF888888"/>

    <!-- FocusVisual -->
    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="2"
                       StrokeThickness="1"
                       Stroke="#FFFFFF"
                       StrokeDashArray="1 2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:SearchTextBox}">
        <Setter Property="Background" Value="#414040"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="2,2,22,2"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SearchTextBox}">
                    <Grid x:Name="RootElement">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.Resources>
                            <!--SearchBar style-->
                            <Style x:Key="IndicatorStyle" TargetType="ToggleButton">
                                <Setter Property="IsEnabled" Value="False" />
                                <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Grid>
                                                <vsm:VisualStateManager.VisualStateGroups>
                                                    <vsm:VisualStateGroup x:Name="CommonStates">
                                                        <vsm:VisualStateGroup.Transitions>
                                                            <vsm:VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver"/>
                                                            <vsm:VisualTransition GeneratedDuration="00:00:00.1" To="Pressed"/>
                                                        </vsm:VisualStateGroup.Transitions>
                                                        <vsm:VisualState x:Name="Normal"/>
                                                    </vsm:VisualStateGroup>
                                                </vsm:VisualStateManager.VisualStateGroups>
                                                <!--Vsm-->
                                                <Border x:Name="VEle_Normal" Background="#FF6A34B5" BorderBrush="#FF6A34B5"  BorderThickness="1" Opacity="1"/>
                                                <Image x:Name="X_OnSeachBar" Cursor="Hand" Height="16" Width="16" Margin="1,0,0,2" Visibility="Visible" 
                                                       ToolTipService.ToolTip="{Binding Source='Search',Converter={StaticResource AveMessageI18N},ConverterParameter='Common_cc3da494_014e_45bb_9f60_18f47c85b948'}" />
                                                <Image x:Name="X_OnDeleteBar" Cursor="Hand" Height="16" Width="16" Margin="1,0,0,2" Visibility="Collapsed" 
                                                       ToolTipService.ToolTip="{Binding Source='Stop',Converter={StaticResource AveMessageI18N},ConverterParameter='Common_1d5f8d7a_b35d_4c57_b5ad_b8f0d642927b'}"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="true">
                                                    <Setter TargetName="X_OnSeachBar" Property="Visibility" Value="Collapsed"/>
                                                    <Setter TargetName="X_OnDeleteBar" Property="Visibility" Value="Visible"/>
                                                </Trigger>
                                                <Trigger Property="IsChecked" Value="false">
                                                    <Setter TargetName="X_OnSeachBar" Property="Visibility" Value="Visible"/>
                                                    <Setter TargetName="X_OnDeleteBar" Property="Visibility" Value="Collapsed"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup x:Name="CommonStates">
                                <vsm:VisualStateGroup.Transitions>
                                    <vsm:VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver"/>
                                    <!--以下时间改成0 解决readonly状态下切换isEnabled属性是闪烁的问题-->
                                    <vsm:VisualTransition GeneratedDuration="00:00:00" To="ReadOnly"/>
                                    <vsm:VisualTransition GeneratedDuration="00:00:00" To="Disabled"/>
                                </vsm:VisualStateGroup.Transitions>
                                <vsm:VisualState x:Name="Normal">
                                    <Storyboard/>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="MouseOverBorder" Storyboard.TargetProperty="Opacity" To="1"/>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ReadOnlyVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="FocusStates">
                                <vsm:VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_ContentHost" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="Watermark" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Unfocused"/>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="WatermarkStates">
                                <vsm:VisualStateGroup.Transitions>
                                    <vsm:VisualTransition GeneratedDuration="0" />
                                </vsm:VisualStateGroup.Transitions>
                                <vsm:VisualState x:Name="Unwatermarked" />
                                <vsm:VisualState x:Name="Watermarked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_ContentHost" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="Watermark" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>
                        <Grid Grid.Column="0">
                            <Border x:Name="BorderBase" Background="{TemplateBinding Background}" BorderBrush="{StaticResource TextBoxNorm}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1"/>
                            <!--ReadOnlyVisualElement拿到ContentElement前面,解决readonly状态下不能复制的问题-->
                            <Border x:Name="ReadOnlyVisualElement" Background="#A5EEEEEE" CornerRadius="1" Visibility="Collapsed" />
                            <Border x:Name="MouseOverBorder" BorderBrush="{StaticResource TextBoxOver}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Opacity="0"/>
                            <ScrollViewer x:Name="PART_ContentHost" CanContentScroll="True" Foreground="Red" Margin="0 0 0 0" Width="{TemplateBinding Width}" Padding="{TemplateBinding Padding}" BorderThickness="0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" IsTabStop="False"/>
                            <Border x:Name="DisabledVisualElement" Background="#CCEEEEEE" BorderBrush="#FFCCCCCC" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" IsHitTestVisible="False" Visibility="Collapsed"/>
                            <Border x:Name="FocusVisualElement" Margin="-1" BorderBrush="{StaticResource TextBoxFocus}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" IsHitTestVisible="False" Opacity="0"/>
                            <!--扩展Watermark-->
                            <ContentControl x:Name="Watermark"
                                        Opacity="0"
                                        IsTabStop="False"
                                        IsHitTestVisible="False"
                                        Content="{TemplateBinding Watermark}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        Foreground="White"
                                        Background="{TemplateBinding Background}"
                                        FontFamily="{TemplateBinding FontFamily}"
                                        FontSize="{TemplateBinding FontSize}"
                                        FontStretch="{TemplateBinding FontStretch}"
                                        FontStyle="Normal"
                                        FontWeight="{TemplateBinding FontWeight}"
                                        Padding="{TemplateBinding Padding}"
                                        Margin="3,0,0,0"/>
                        </Grid>
                        <StackPanel Grid.Column="1" Orientation="Horizontal">
                            <Border Width="3" BorderBrush="Black"></Border>
                            <!--扩展SearchBar-->
                            <!--Vsm-->
                            <ToggleButton x:Name="IndicateBar" 
                                          Cursor="Hand"
                                          Width="25"
                                          Height="{Binding Height}"
                                          Style="{StaticResource IndicatorStyle}"
                                          HorizontalAlignment="Right"
                                          VerticalAlignment="Stretch"
                                          IsTabStop="True"/>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
