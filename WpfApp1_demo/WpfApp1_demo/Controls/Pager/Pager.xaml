<!--/********************************************************************
 *
 *  PROPRIETARY and CONFIDENTIAL
 *
 *  This file is licensed from, and is a trade secret of:
 *
 *                   AvePoint, Inc.
 *                   Harborside Financial Center
 *                   9th Fl.   Plaza Ten
 *                   Jersey City, NJ 07311
 *                   United States of America
 *                   Telephone: +1-800-661-6588
 *                   WWW: www.avepoint.com
 *
 *  Refer to your License Agreement for restrictions on use,
 *  duplication, or disclosure.
 *
 *  RESTRICTED RIGHTS LEGEND
 *
 *  Use, duplication, or disclosure by the Government is
 *  subject to restrictions as set forth in subdivision
 *  (c)(1)(ii) of the Rights in Technical Data and Computer
 *  Software clause at DFARS 252.227-7013 (Oct. 1988) and
 *  FAR 52.227-19 (C) (June 1987).
 *
 *  Copyright © 2001-2014 AvePoint® Inc. All Rights Reserved. 
 *
 *  Unpublished - All rights reserved under the copyright laws of the United States.
 *  $Revision:  $
 *  $Author:  $        
 *  $Date:  $
 */-->

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:AvePoint.Migrator.Common.Controls"
    xmlns:CommnonI18N="clr-namespace:MigratorTool.WPF.I18N"
    xmlns:vsm="clr-namespace:System.Windows">

    <!--I18N-->
    <CommnonI18N:I18NEntity x:Key="AveMessageI18N" />

    <Style TargetType="local:Pager">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:Pager">
                    <Border BorderBrush="#b1b1b1" BorderThickness="1,0,1,1">
                        <StackPanel x:Name="SP" HorizontalAlignment="Right" Margin="0,0,5,0">
                            <StackPanel.Resources>
                                <!--Button Style-->
                                <!--翻页Button  ArrowButtonStyle-->
                                <Style TargetType="Button" x:Key="ArrowButtonStyle">
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Grid>
                                                    <ContentPresenter
                                                    x:Name="contentPresenter"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    Margin="{TemplateBinding Padding}">
                                                    </ContentPresenter>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter TargetName="contentPresenter" Property="Opacity" Value="0.3"/>
                                                    </Trigger>
                                                    <Trigger Property="IsFocused" Value="True">
                                                        <!--<Setter TargetName="FocusVisualElement" Property="Opacity" Value="1"/>-->
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>

                                <!--数字Toggle Button  NumericButtonStyle-->
                                <Style TargetType="ToggleButton" x:Name="NumericButtonStyle">
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <!--<Setter Property="Padding" Value="4,1"/>-->
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Grid>
                                                    <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                      Margin="{TemplateBinding Padding}"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter TargetName="contentPresenter" Property="Opacity" Value="0.3"/>
                                                    </Trigger>
                                                    <Trigger Property="IsFocused" Value="True">
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="True">
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </StackPanel.Resources>
                            <!--原Normal AUIPager-->
                            <Grid x:Name="PreviousNextPager" Height="30">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock x:Name="ShowRowsTB" Text="{Binding Source='Show rows',Converter={StaticResource AveMessageI18N},ConverterParameter='Common_382d6520_3646_4fae_9274_109165d6b60e'}" VerticalAlignment="Center" Margin="0 0 5 0"/>
                                <ComboBox VerticalAlignment="Center" x:Name="PageSizeComboBox" Grid.Column="1" ItemsSource="{TemplateBinding PageSizeCases}" AutomationProperties.Name="{Binding ElementName=ShowRowsTB, Path=Text}" />
                                <TextBlock x:Name="GotoTB" Text="{Binding Source='Go to',Converter={StaticResource AveMessageI18N},ConverterParameter='Common_acded17a_d225_451f_af90_e3df86b07606'}" Grid.Column="2" VerticalAlignment="Center" Margin="5 0"/>
                                <TextBox x:Name="PageIndexTextBox" Grid.Column="3" MinWidth="16" Text="{TemplateBinding PageIndexStr}" VerticalAlignment="Center" AutomationProperties.Name="{Binding ElementName=GotoTB, Path=Text}" />
                                <TextBlock Text="{Binding Source=' of ',Converter={StaticResource AveMessageI18N},ConverterParameter='Common_1d2cb61d_dcd9_4d9a_9ee1_8626ebb8c7dd'}" Grid.Column="5" VerticalAlignment="Center"/>
                                <TextBlock Text="{TemplateBinding PageCountStr}" Grid.Column="6" VerticalAlignment="Center"/>
                                <Button Width="17" Height="17" Margin="10 0 10 0" x:Name="MoveToPreviousPageButton" Content="&lt;" IsEnabled="{TemplateBinding CanMoveToPreviousPage}" Grid.Column="7" VerticalAlignment="Center" ToolTipService.ToolTip="{Binding Source='Previous', Converter={StaticResource AveMessageI18N},ConverterParameter='Common_20ef77ff_d5bb_4b5c_9ea1_73223e8a9c4e'}" AutomationProperties.Name="{Binding RelativeSource={RelativeSource Self}, Path=(ToolTipService.ToolTip)}" />
                                <Button Width="17" Height="17" x:Name="MoveToNextPageButton" Content="&gt;" IsEnabled="{TemplateBinding CanMoveToNextPage}" Grid.Column="8" VerticalAlignment="Center" ToolTipService.ToolTip="{Binding Source='Next', Converter={StaticResource AveMessageI18N},ConverterParameter='Common_a51115dc_4bb1_4438_ae89_ca134b60a978'}" AutomationProperties.Name="{Binding RelativeSource={RelativeSource Self}, Path=(ToolTipService.ToolTip)}" />
                            </Grid>
                            <!--新增加的AUIGroupPager-->
                            <Grid x:Name="GroupPager" Visibility="Collapsed" Height="30">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                    <TextBlock Text="{Binding Source='Show rows',Converter={StaticResource AveMessageI18N},ConverterParameter='Common_382d6520_3646_4fae_9274_109165d6b60e'}" VerticalAlignment="Center" Margin="5 0 5 0"/>
                                    <ComboBox x:Name="PageSizeComboBoxGroup" ItemsSource="{TemplateBinding PageSizeCases}"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Right" Height="30">
                                    <Image x:Name="LoadingImg"
                                Height="18" Width="18" 
                                Margin="-2 0 0 0"
                                Visibility="{TemplateBinding LoadingVisibility}"
                                HorizontalAlignment="Center">
                                        <Image.RenderTransform>
                                            <RotateTransform x:Name="LoadingAngle" CenterX="9" CenterY="9"/>
                                        </Image.RenderTransform>
                                        <Image.Triggers>
                                            <EventTrigger RoutedEvent="Image.Loaded">
                                                <BeginStoryboard>
                                                    <Storyboard x:Name="RunningSB">
                                                        <DoubleAnimation Storyboard.TargetProperty="Angle"
                                                    Storyboard.TargetName="LoadingAngle"
                                                    From="0" To="360" Duration="0:0:1" RepeatBehavior="Forever"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Image.Triggers>
                                    </Image>
                                    <Button x:Name="PreviousPageBtn" Style="{StaticResource ArrowButtonStyle}" Margin="5,6,5,6" Padding="5,5,5,5" IsEnabled="{TemplateBinding CanMoveToPreviousPage}" ToolTipService.ToolTip="{Binding Source='Previous Page', Converter={StaticResource AveMessageI18N},ConverterParameter='Common'}">
                                        <Path Data="M1,0 L1,2 L0,1 Z" Width="5" Height="8" Stretch="Fill" Fill="#FF112244" />
                                    </Button>
                                    <Button x:Name="PreviousGroupBtn" Content="{Binding Source='...',Converter={StaticResource AveMessageI18N},ConverterParameter='Common_1f86bf44_2b30_4159_b650_8c4c51daffd6'}" Style="{StaticResource ArrowButtonStyle}" Margin="0 6 0 6" Padding="3,1" Visibility="{TemplateBinding CanPreviousGroup}" ToolTipService.ToolTip="{Binding Source='Previous Group', Converter={StaticResource AveMessageI18N},ConverterParameter='Common'}"/>
                                    <StackPanel x:Name="NumericButtonPanel" Orientation="Horizontal" Margin="0 6 0 6"/>
                                    <Button x:Name="NextGroupBtn" Content="{Binding Source='...',Converter={StaticResource AveMessageI18N},ConverterParameter='Common_1f86bf44_2b30_4159_b650_8c4c51daffd6'}" Style="{StaticResource ArrowButtonStyle}" Margin="0 6 0 6" Padding="3,1" Visibility="{TemplateBinding CanNextGroup}" ToolTipService.ToolTip="{Binding Source='Next Group', Converter={StaticResource AveMessageI18N},ConverterParameter='Common'}"/>
                                    <Button x:Name="NextPageBtn" Style="{StaticResource ArrowButtonStyle}" Margin="5 6 5 6" Padding="5,5,5,5" IsEnabled="{TemplateBinding CanMoveToNextPage}" ToolTipService.ToolTip="{Binding Source='Next Page', Converter={StaticResource AveMessageI18N},ConverterParameter='Common'}">
                                        <Path Data="M0,0 L1,1 L0,2 Z" Width="5" Height="8" Stretch="Fill" Fill="#FF112244" />
                                    </Button>
                                </StackPanel>
                            </Grid>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="PagerDisplayMode" Value="PreviousNextMode">
                            <Setter TargetName="PreviousNextPager" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="GroupPager" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="PagerDisplayMode" Value="GroupNumericMode">
                            <Setter TargetName="PreviousNextPager" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="GroupPager" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
